# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code, run tests, and push the Docker image to Docker Hub
name: AI School Frontend Deployment

on:
   push:
      branches: ["main"]
   pull_request:
      branches: ["main"]

jobs:
   lint:
      runs-on: ubuntu-latest
      steps:
         - name: Checkout code
           uses: actions/checkout@v4

         - name: Setup Node.js
           uses: actions/setup-node@v4
           with:
              node-version: 20.x
              cache: "npm"

         - name: Install dependencies
           run: npm ci

         - name: Run ESLint
           run: npm run lint

   build:
      runs-on: ubuntu-latest
      needs: lint

      strategy:
         matrix:
            node-version: [20.x]

      steps:
         - name: Checkout code
           uses: actions/checkout@v4

         - name: Use Node.js ${{ matrix.node-version }}
           uses: actions/setup-node@v4
           with:
              node-version: ${{ matrix.node-version }}
              cache: "npm"

         - name: Install dependencies
           run: npm ci

         - name: Build application
           run: npm run build --if-present

         - name: Run tests
           run: npm test
   server-deploy:
      runs-on: ubuntu-latest
      needs: build
      steps:
         - name: ssh to server
           env:
              SERVER_PRIVATE_KEY: ${{ secrets.SERVER_PRIVATE_KEY }}
              SERVER_IP: ${{ secrets.SERVER_IP }}
              SERVER_USER: ${{ secrets.SERVER_USER }}
           run: |
              echo "$SERVER_PRIVATE_KEY" | tr -d '\r' > private_key
              chmod 600 private_key
              ssh -o StrictHostKeyChecking=no -i private_key $SERVER_USER@$SERVER_IP << 'EOF'
                # Navigate to the frontend project directory
                cd /var/www/school/frontend

               # Check if the .git folder exists (this indicates if the repo has already been cloned)
               if [ ! -d ".git" ]; then
                  echo "No .git folder found. Cloning the repository..."
                  git clone https://github.com/hosseinmirzapur/ai-school.git .

                  # Use nvm to set the Node version and install dependencies
                  nvm exec 20 npm install

                  nvm exec 20 npm run build
               else
                  echo "Git repository already cloned. Pulling latest changes..."
                  git fetch origin
                  git checkout main
                  git pull origin main
                  # Install any new dependencies and rebuild the project
                  nvm exec 20 npm ci
                  nvm exec 20 npm run build
               fi

               # Set up PM2 and start the app using the ecosystem file
               pm2 stop ai-school || true  # Stop any running instance of the app
               pm2 start ecosystem.config.js  # Use the ecosystem config to start the app

               # Save the PM2 process list to ensure it restarts after reboot
               pm2 save
              EOF

              # Clean up the temporary key file
              rm -f private_key
